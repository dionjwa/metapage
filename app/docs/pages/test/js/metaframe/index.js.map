{"version":3,"sources":["../../node_modules/eventemitter3/index.js","MetaLibsVersion.ts","Constants.ts","v0_3/JsonRpcMethods.ts","../../node_modules/compare-versions/index.js","MetapageTools.ts","Metaframe.ts"],"names":[],"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","file":"index.js","sourceRoot":"../../../../src/metapage","sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\nexport enum Versions {\n\tV0_0_1 = \"0.0.1\",\n\tV0_1_0 = \"0.1.0\",\n\tV0_2 = \"0.2\",\n\tV0_3 = \"0.3\"\n  }\n\nexport const AllVersions = Object.keys(Versions);\n\nexport const CurrentVersion = Versions.V0_3;\n","import {AllVersions} from \"./MetaLibsVersion\";\n\nexport const METAFRAME_JSON_FILE = \"metaframe.json\";\nexport const METAPAGE_KEY_DEFINITION = \"metapage/definition\";\nexport const METAPAGE_KEY_STATE = \"metapage/state\";\nexport const URL_PARAM_DEBUG = \"MP_DEBUG\";\n\nexport const VERSION = AllVersions[AllVersions.length - 1];\n","import {MetaframeId, MetapageId, MetaframeInputMap, Versions} from \"./all\";\nimport {JsonRpcRequest} from '../jsonrpc2';\n\n\nexport enum JsonRpcMethodsFromChild {\n  InputsUpdate = \"InputsUpdate\",\n  OutputsUpdate = \"OutputsUpdate\",\n  SetupIframeClientRequest = \"SetupIframeClientRequest\",\n  SetupIframeServerResponseAck = \"SetupIframeServerResponseAck\",\n  // Plugin API\n  PluginRequest = \"SetupIframeServerPluginRequestResponseAck\" // See further definitions: ApiPayloadPluginRequest*\n}\n\nexport enum JsonRpcMethodsFromParent {\n  InputsUpdate = \"InputsUpdate\",\n  MessageAck = \"MessageAck\",\n  SetupIframeServerResponse = \"SetupIframeServerResponse\"\n}\n\nexport enum OtherEvents {\n  Message = \"Message\"\n}\n\nexport interface SetupIframeServerResponseData {\n  iframeId: MetaframeId;\n  parentId: MetapageId;\n  state: {\n    inputs: MetaframeInputMap\n  };\n  // Allow newer metaframes to handle older metapage versions\n  version: Versions;\n  //is this metaframe a plugin?\n  plugin: boolean;\n}\n\nexport interface MinimumClientMessage<T> extends JsonRpcRequest<T> {\n  iframeId: MetaframeId | undefined;\n  parentId: MetapageId | undefined;\n}\n\nexport interface SetupIframeClientAckData<T> extends MinimumClientMessage<T> {\n  version: Versions;\n}\n\nexport interface ClientMessageRecievedAck<T> {\n  message: MinimumClientMessage<T>;\n}\n\n// Plugin API definitions\nexport enum ApiPayloadPluginRequestMethod {\n  State = \"metapage/state\"\n}\n\nexport interface ApiPayloadPluginRequest {\n  method: ApiPayloadPluginRequestMethod;\n}\n","/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n  var allowedOperators = [\n    '>',\n    '>=',\n    '=',\n    '<',\n    '<='\n  ];\n\n  var operatorResMap = {\n    '>': [1],\n    '>=': [0, 1],\n    '=': [0],\n    '<=': [-1, 0],\n    '<': [-1]\n  };\n\n  function validateOperator(op) {\n    if (typeof op !== 'string') {\n      throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n    }\n    if (allowedOperators.indexOf(op) === -1) {\n      throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n    }\n  }\n\n  compareVersions.validate = function(version) {\n    return typeof version === 'string' && semver.test(version);\n  }\n\n  compareVersions.compare = function (v1, v2, operator) {\n    // Validate operator\n    validateOperator(operator);\n\n    // since result of compareVersions can only be -1 or 0 or 1\n    // a simple map can be used to replace switch\n    var res = compareVersions(v1, v2);\n    return operatorResMap[operator].indexOf(res) > -1;\n  }\n\n  return compareVersions;\n}));\n","import {compare} from \"compare-versions\";\nimport {URL_PARAM_DEBUG} from \"./Constants\";\nimport {Versions, AllVersions, CurrentVersion} from \"./MetaLibsVersion\";\nimport {MetaframeInputMap, MetaframeId, MetapageId, MetapageDefinition} from \"./v0_3/all\";\n\nimport {MetapageDefinition as V0_2MetapageDefinition} from \"./v0_2/all\";\nimport {MetapageDefinition as V0_3MetapageDefinition} from \"./v0_3/all\";\n\n// metapages can convert any past version to the current version.\nexport const convertToCurrentDefinition = (def : any): MetapageDefinition => {\n  if (def === null) {\n    throw \"Metapage definition cannot be null\";\n  }\n  if (typeof def === \"string\") {\n    try {\n      def = JSON.parse(def);\n    } catch (err) {\n      throw `Cannot parse into JSON:\\n${def}`;\n    }\n  }\n\n  // Recursively convert up the version\n  let updatedDefinition: MetapageDefinition;\n  switch (getMatchingVersion(def.version)) {\n    case Versions.V0_2:\n      {\n        updatedDefinition = convertToCurrentDefinition(definition_v0_2_to_v0_3(def as V0_2MetapageDefinition));\n        break;\n      }\n    case Versions.V0_3:\n      {\n        updatedDefinition = def as MetapageDefinition; // Latest\n        break;\n      }\n    default:\n      {\n        throw `Unknown metapage version: ${\n        def.version}. Supported versions: [${AllVersions.join(\", \")}]`;\n      }\n  }\n  return updatedDefinition;\n};\n\nconst definition_v0_2_to_v0_3 = (old : V0_2MetapageDefinition): V0_3MetapageDefinition => {\n  // Exactly the same except v0.3 has plugins\n  old.version = Versions.V0_3;\n  return old;\n};\n\n/**\n * Merges new values into the current object.\n * Does NOT check if there are actually new keys.\n * Does NOT check values against each other. This means you\n * can keep sending the same value, and the message will\n * be passed in.\n * Returns true if the original map was modified.\n */\nexport const merge = (current : MetaframeInputMap, newInputs : MetaframeInputMap): boolean => {\n  if (!newInputs) {\n    return false;\n  }\n  let modified = false;\n  Object.keys(newInputs).forEach((pipeId : string) => {\n    modified = true;\n    // undefined means remove the key\n    // null means keep the key, but set to null\n    if (newInputs[pipeId] === undefined) {\n      delete current[pipeId];\n    } else {\n      current[pipeId] = newInputs[pipeId];\n    }\n  });\n  return modified;\n};\n\nexport const getMatchingVersion = (version : string): Versions => {\n  if (version == \"latest\") {\n    return CurrentVersion;\n  } else if (compare(version, \"0.0.x\", \"<\")) {\n    return Versions.V0_0_1;\n  } else if (compare(version, \"0.1.36\", \">=\") && compare(version, Versions.V0_2, \"<\")) {\n    return Versions.V0_1_0;\n  } else if (compare(version, \"0.2\", \">=\") && compare(version, Versions.V0_3, \"<\")) {\n    return Versions.V0_2;\n  } else if (compare(version, \"0.3\", \">=\")) {\n    return Versions.V0_3;\n  } else {\n    // Return something, assume latest\n    console.log(`Could not match version=${version} to any known version, assuming ${CurrentVersion}`);\n    return CurrentVersion;\n  }\n};\n\nexport const getUrlParam = (key : string): string | null => {\n  if (!window.location.search) {\n    return null;\n  }\n  return new URLSearchParams(window.location.search).get(key);\n};\n\nexport const getUrlParamDEBUG = (): boolean => {\n  return new URLSearchParams(window.location.search).has(URL_PARAM_DEBUG);\n};\n\nexport const existsAnyUrlParam = (k : string[]): boolean => {\n  const members = k.filter((param : string) => {\n    return new URLSearchParams(window.location.search).has(param);\n  });\n  return members.length > 0;\n};\n\nexport const generateMetaframeId = (length : number = 8): MetaframeId => {\n  return generateId(length);\n};\n\nexport const generateMetapageId = (length : number = 8): MetapageId => {\n  return generateId(length);\n};\n\nexport const generateNonce = (length : number = 8): string => {\n  return generateId(length);\n};\n\nconst LETTERS = \"abcdefghijklmnopqrstuvwxyz0123456789\";\nexport const generateId = (length : number = 8): string => {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = LETTERS.length;\n  for (var i = 0; i < length; i++) {\n    result += LETTERS.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const log = (o : any, color? : string, backgroundColor? : string) => {\n  color = color\n    ? color\n    : \"000\";\n  if (color && color.trim() == \"\") {\n    color = undefined;\n  }\n  let s: string;\n  if (typeof o === \"string\") {\n    s = o as string;\n  } else if (typeof o === \"number\") {\n    s = o + \"\";\n  } else {\n    s = JSON.stringify(o, null, \"  \");\n  }\n\n  if (color && color.trim() != \"\") {\n    var cssstring = `color: #${color}`;\n    if (backgroundColor) {\n      cssstring = `${cssstring}; background: #${backgroundColor}`;\n    }\n    s = `%c${s}`;\n    window.console.log(s, cssstring);\n  } else {\n    window.console.log(s);\n  }\n};\n\nexport const stringToRgb = (str : string): string => {\n  return intToRGB(hashCode(str));\n};\n\nexport const hashCode = (str : string): number => {\n  // java string#hashCode\n  var hash = 0;\n  for (let i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n  return hash;\n};\n\nexport const intToRGB = (i : number): string => {\n  var c = (i & 0x00ffffff).toString(16).toUpperCase();\n  return \"00000\".substring(0, 6 - c.length) + c;\n};\n\n/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nconst chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n// Use a lookup table to find the index.\nconst lookup = new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n  lookup[chars.charCodeAt(i)] = i;\n}\n\nexport function base64encode(arraybuffer : ArrayBuffer) :string {\n  let bytes = new Uint8Array(arraybuffer);\n  let i: number;\n  let len = bytes.length;\n  let base64 = \"\";\n\n  for (i = 0; i < len; i += 3) {\n    base64 += chars[bytes[i] >> 2];\n    base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n    base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n    base64 += chars[bytes[i + 2] & 63];\n  }\n\n  if (len % 3 === 2) {\n    base64 = base64.substring(0, base64.length - 1) + \"=\";\n  } else if (len % 3 === 1) {\n    base64 = base64.substring(0, base64.length - 2) + \"==\";\n  }\n\n  return base64;\n}\n\nexport function base64decode(base64 : string) :ArrayBuffer {\n    if (!base64) {\n        throw new Error(\"base64decode string argument given\");\n    }\n  let bufferLength = base64.length * 0.75,\n    len = base64.length,\n    i:number,\n    p = 0,\n    encoded1: number,\n    encoded2: number,\n    encoded3: number,\n    encoded4: number;\n\n  if (base64[base64.length - 1] === \"=\") {\n    bufferLength--;\n    if (base64[base64.length - 2] === \"=\") {\n      bufferLength--;\n    }\n  }\n\n  var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n  for (i = 0; i < len; i += 4) {\n    encoded1 = lookup[base64.charCodeAt(i)];\n    encoded2 = lookup[base64.charCodeAt(i + 1)];\n    encoded3 = lookup[base64.charCodeAt(i + 2)];\n    encoded4 = lookup[base64.charCodeAt(i + 3)];\n\n    bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n    bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n    bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n  }\n\n  return arraybuffer;\n}\n","import {EventEmitter, ListenerFn} from \"eventemitter3\";\nimport {VERSION, METAPAGE_KEY_STATE, METAPAGE_KEY_DEFINITION} from \"./Constants\";\nimport {Versions} from \"./MetaLibsVersion\";\nimport {MetaframeInputMap, MetaframePipeId, MetaframeId, MetapageId} from \"./v0_3/all\";\nimport {\n  ApiPayloadPluginRequest,\n  ApiPayloadPluginRequestMethod,\n  JsonRpcMethodsFromParent,\n  JsonRpcMethodsFromChild,\n  SetupIframeServerResponseData,\n  MinimumClientMessage\n} from \"./v0_3/JsonRpcMethods\";\nimport {getUrlParamDEBUG, stringToRgb, log as MetapageToolsLog, merge} from \"./MetapageTools\";\n\nenum MetaframeEvents {\n  Input = \"input\",\n  Inputs = \"inputs\",\n  Message = \"message\"\n}\n\nexport const isIframe = (): boolean => {\n  //http://stackoverflow.com/questions/326069/how-to-identify-if-a-webpage-is-being-loaded-inside-an-iframe-or-directly-into-t\n  try {\n    return window !== window.top;\n  } catch (ignored) {\n    return false;\n  }\n};\n\nexport class Metaframe extends EventEmitter < MetaframeEvents | JsonRpcMethodsFromChild > {\n  public static readonly version = VERSION;\n\n  public static readonly INPUT = MetaframeEvents.Input;\n  public static readonly INPUTS = MetaframeEvents.Inputs;\n  public static readonly MESSAGE = MetaframeEvents.Message;\n\n  _inputPipeValues: MetaframeInputMap = {};\n  _outputPipeValues: MetaframeInputMap = {};\n  // obsoleted, use this.id\n  _iframeId: MetaframeId | undefined;\n  _parentId: MetapageId | undefined;\n  _parentVersion: Versions | undefined;\n  _isIframe: boolean;\n\n  debug: boolean = false;\n  ready: Promise<boolean>;\n  color: string | undefined;\n  plugin: MetaframePlugin | undefined;\n\n  /**\n   * This is the (locally) unique id that the parent metapage\n   * assigns to the metaframe. Defaults to the name given in\n   * then metapage definition.\n   */\n  // TODO obsoleted, use this.id\n  // name:string;\n  id: string | undefined;\n\n  constructor() {\n    super();\n    this.debug = getUrlParamDEBUG();\n    this._isIframe = isIframe();\n\n    this.addListener = this.addListener.bind(this);\n    this.dispose = this.dispose.bind(this);\n    this.error = this.error.bind(this);\n    this.getInput = this.getInput.bind(this);\n    this.getInputs = this.getInputs.bind(this);\n    this.getOutput = this.getOutput.bind(this);\n    this.getOutputs = this.getOutputs.bind(this);\n    this.log = this.log.bind(this);\n    this.logInternal = this.logInternal.bind(this);\n    this.onInput = this.onInput.bind(this);\n    this.onInputs = this.onInputs.bind(this);\n    this.onWindowMessage = this.onWindowMessage.bind(this);\n    this.sendRpc = this.sendRpc.bind(this);\n    this.setInput = this.setInput.bind(this);\n    this.setInputs = this.setInputs.bind(this);\n    this.setInternalInputsAndNotify = this.setInternalInputsAndNotify.bind(this);\n    this.setOutput = this.setOutput.bind(this);\n    this.setOutputs = this.setOutputs.bind(this);\n    this.warn = this.warn.bind(this);\n    this._resolveSetupIframeServerResponse = this._resolveSetupIframeServerResponse.bind(this);\n    this.addListenerReturnDisposer = this.addListenerReturnDisposer.bind(this);\n\n    if (!this._isIframe) {\n      //Don't add any of the machinery, it only works if we're iframes.\n      //This will never return\n      this.ready = new Promise((_) => {});\n      this.log(\"Not an iframe, metaframe code disabled\");\n      return;\n    }\n\n    window.addEventListener(\"message\", this.onWindowMessage);\n\n    //Get ready, request the parent to register to establish messaging pipes\n    const thisRef = this;\n    this.ready = new Promise(function (resolve, _) {\n      thisRef._resolver = resolve;\n      // First listen to the parent metapage response\n      // thisRef.once(JsonRpcMethodsFromParent.SetupIframeServerResponse,\n      // });\n      // Now that we're listening, request to the parent to register us\n      thisRef.sendRpc(JsonRpcMethodsFromChild.SetupIframeClientRequest, {version: Metaframe.version});\n    });\n  }\n\n  _resolver :((val :boolean)=>void) | undefined;\n\n  _resolveSetupIframeServerResponse (params : SetupIframeServerResponseData) {\n    if (this._iframeId == null) {\n      this._iframeId = params.iframeId;\n      this.id = params.iframeId;\n      this._parentVersion = params.version;\n      this.color = stringToRgb(this._iframeId);\n      this._parentId = params.parentId;\n      this.log(\n        `metapage[${this._parentId}](v${this._parentVersion\n        ? this._parentVersion\n        : \"unknown\"}) registered`);\n\n      this._inputPipeValues = params.state != null && params.state.inputs != null\n        ? params.state.inputs\n        : this._inputPipeValues;\n\n      //Tell the parent we have registered.\n      this.sendRpc(JsonRpcMethodsFromChild.SetupIframeServerResponseAck, {version: Metaframe.version});\n\n      //Send notifications of initial inputs (if non-null)\n      //so you don't have to listen to the ready event if you don't want to\n      if (this._inputPipeValues && Object.keys(this._inputPipeValues).length > 0) {\n        this.emit(MetaframeEvents.Inputs, this._inputPipeValues);\n        Object.keys(this._inputPipeValues).forEach(pipeId => this.emit(MetaframeEvents.Input, pipeId, this._inputPipeValues[pipeId]));\n      }\n\n      // if this is a plugin, initialize the plugin object\n      if (params.plugin) {\n        this.plugin = new MetaframePlugin(this);\n      }\n\n      //Resolve AFTER sending inputs. This way consumers can either:\n      //1) Just listen to inputs updates. The first will be when the metaframe is ready\n      //2) Listen to the ready event, get the inputs if desired, and listen to subsequent\n      //   inputs updates. You may not wish to respond to the first updates but you might\n      //   want to know when the metaframe is ready\n      //*** Does this distinction make sense?\n      if (this._resolver) this._resolver(true);\n\n      // window.addEventListener('resize', sendWindowDimensions);\n      // sendWindowDimensions();\n    } else {\n      this.log(\"Got JsonRpcMethods.SetupIframeServerResponse but already resolved\");\n    }\n  }\n\n  addListenerReturnDisposer(event : MetaframeEvents | JsonRpcMethodsFromChild, listener : ListenerFn<any[]>): () => void {\n    super.addListener(event, listener);\n    const disposer = () => {\n      super.removeListener(event, listener);\n    };\n    return disposer;\n  }\n\n  public log(o : any, color? : string, backgroundColor? : string) {\n    if (!this.debug) {\n      return;\n    }\n    this.logInternal(\n      o, color != null\n      ? color\n      : this.color);\n  }\n\n  public warn(o : any) {\n    if (!this.debug) {\n      return;\n    }\n    this.logInternal(o, \"000\", this.color);\n  }\n\n  public error(err : any) {\n    this.logInternal(err, this.color, \"f00\");\n  }\n\n  logInternal(o : any, color? : string, backgroundColor? : string) {\n    let s: string;\n    if (typeof o === \"string\") {\n      s = o as string;\n    } else if (typeof o === \"number\") {\n      s = o + \"\";\n    } else {\n      s = JSON.stringify(o);\n    }\n\n    color = color != null\n      ? color + \"\"\n      : color;\n\n    s = (\n      this._iframeId != null\n      ? \"Metaframe[$_iframeId] \"\n      : \"\") + `${s}`;\n    MetapageToolsLog(s, color, backgroundColor);\n  }\n\n  public dispose() {\n    super.removeAllListeners();\n    window.removeEventListener(\"message\", this.onWindowMessage);\n    // @ts-ignore\n    this._inputPipeValues = undefined;\n    // @ts-ignore\n    this._outputPipeValues = undefined;\n  }\n\n  public addListener(event : MetaframeEvents | JsonRpcMethodsFromChild, listener : ListenerFn<any[]>) {\n    super.addListener(event, listener);\n\n    //If it is an input or output, set the current input/output values when\n    //attaching a listener on the next tick to ensure that the listener\n    //will always get a value if it exists\n    if (event === MetaframeEvents.Inputs) {\n      window.setTimeout(() => {\n        if (this._inputPipeValues != null) {\n          listener(this._inputPipeValues);\n        }\n      }, 0);\n    }\n    return this;\n  }\n\n  public onInput(pipeId : MetaframePipeId, listener : any): () => void {\n    return this.addListenerReturnDisposer(MetaframeEvents.Input, (pipe : MetaframePipeId, value : any) => {\n      if (pipeId === pipe) {\n        listener(value);\n      }\n    });\n  }\n\n  public onInputs(listener : (m : MetaframeInputMap) => void): () => void {\n    return this.addListenerReturnDisposer(MetaframeEvents.Inputs, listener);\n  }\n\n  /**\n   * This is a particular use case: metapage inputs are saved outside\n   * the iframe, so when this iframe is restarted in the same metapage\n   * it will start with this value. So in a way, it can be used for\n   * state storage, by the metaframe itself.\n   */\n  public setInput(pipeId : MetaframePipeId, blob : any) {\n    var inputs: MetaframeInputMap = {};\n    inputs[pipeId] = blob;\n    this.setInputs(inputs);\n  }\n\n  /**\n   * This does NOT directly update internal inputs. It tells\n   * the metapage parent, which then updates back. So if there\n   * is no metapage parent, this will do nothing.\n   *\n   * @param inputs\n   */\n  public setInputs(inputs : MetaframeInputMap) {\n    this.sendRpc(JsonRpcMethodsFromChild.InputsUpdate, inputs);\n  }\n\n  setInternalInputsAndNotify(inputs : MetaframeInputMap) {\n    if (!merge(this._inputPipeValues, inputs)) {\n      // console.log('⚡🌶 Metaframe.setInternalInputsAndNotify failed merge');\n      return;\n    }\n\n    Object.keys(inputs).forEach(pipeId => this.emit(MetaframeEvents.Input, pipeId, inputs[pipeId]));\n    // console.log(`⚡🍩 Metaframe emit (listeners:${this.listenerCount(MetaframeEvents.Input)}) MetaframeEvents.Inputs`, inputs);\n    this.emit(MetaframeEvents.Inputs, inputs);\n  }\n\n  public getInput(pipeId : MetaframePipeId): any {\n    console.assert(pipeId != null);\n    return this._inputPipeValues[pipeId];\n  }\n\n  public getInputs(): MetaframeInputMap {\n    return this._inputPipeValues;\n  }\n\n  public getOutput(pipeId : MetaframePipeId): any {\n    console.assert(pipeId != null);\n    return this._outputPipeValues[pipeId];\n  }\n\n  /**\n   * What does setting this to null mean?\n   * @param pipeId     :MetaframePipeId [description]\n   * @param updateBlob :any        [description]\n   */\n  public setOutput(pipeId : MetaframePipeId, updateBlob : any): void {\n    console.assert(pipeId != null);\n    console.assert(updateBlob != null);\n\n    var outputs: MetaframeInputMap = {};\n    outputs[pipeId] = updateBlob;\n\n    this.setOutputs(outputs);\n  }\n\n  public setOutputs(outputs : MetaframeInputMap): void {\n    if (!merge(this._outputPipeValues, outputs)) {\n      return;\n    }\n    this.sendRpc(JsonRpcMethodsFromChild.OutputsUpdate, outputs);\n  }\n\n  public getOutputs(): MetaframeInputMap {\n    return this._outputPipeValues;\n  }\n\n  sendRpc(method : JsonRpcMethodsFromChild, params : any) {\n    if (this._isIframe) {\n      const message: MinimumClientMessage<any> = {\n        jsonrpc: \"2.0\",\n        id: undefined,\n        // id     : MetapageTools.generateNonce(),\n        method: method,\n        params: params,\n        iframeId: this._iframeId,\n        parentId: this._parentId\n      };\n      this.log(message);\n      window.parent.postMessage(message, \"*\");\n    } else {\n      this.error(\"Cannot send JSON-RPC window message: there is no window.parent which means we are not an iframe\");\n    }\n  }\n\n  onWindowMessage(e : any) {\n    if (typeof e.data === \"object\") {\n      let jsonrpc: MinimumClientMessage<any> = e.data;\n      if (jsonrpc.jsonrpc === \"2.0\") {\n        //Make sure this is a jsonrpc object\n        var method = jsonrpc.method as JsonRpcMethodsFromParent;\n        if (!(method == JsonRpcMethodsFromParent.SetupIframeServerResponse || (jsonrpc.parentId == this._parentId && jsonrpc.iframeId == this._iframeId))) {\n          this.error(`window.message: received message but jsonrpc.parentId=${jsonrpc.parentId} _parentId=${this._parentId} jsonrpc.iframeId=${jsonrpc.iframeId} _iframeId=${this._iframeId}`);\n          return;\n        }\n\n        switch (method) {\n          case JsonRpcMethodsFromParent.SetupIframeServerResponse:\n            this._resolveSetupIframeServerResponse(jsonrpc.params);\n            break; //Handled elsewhere\n          case JsonRpcMethodsFromParent.InputsUpdate:\n            // console.log('⚡ Metaframe.InputsUpdate', jsonrpc.params.inputs);\n            this.setInternalInputsAndNotify(jsonrpc.params.inputs);\n            break;\n          case JsonRpcMethodsFromParent.MessageAck:\n            if (this.debug)\n              this.log(`ACK: ${JSON.stringify(jsonrpc)}`);\n            break;\n          default:\n            if (this.debug)\n              this.log(`window.message: unknown JSON-RPC method: ${JSON.stringify(jsonrpc)}`);\n            break;\n        }\n\n        // this.emit(jsonrpc.method, jsonrpc.params);\n        this.emit(MetaframeEvents.Message, jsonrpc);\n      }\n    }\n  }\n}\n\n/**\n * A special kind of metaframe that can get and set the metapage definition\n * and metapage state (so quite powerful).\n */\nexport class MetaframePlugin {\n  _metaframe: Metaframe;\n\n  constructor(metaframe : Metaframe) {\n    this._metaframe = metaframe;\n    this.requestState = this.requestState.bind(this);\n    this.onState = this.onState.bind(this);\n    this.getState = this.getState.bind(this);\n    this.setState = this.setState.bind(this);\n    this.onDefinition = this.onDefinition.bind(this);\n    this.getDefinition = this.getDefinition.bind(this);\n    this.setDefinition = this.setDefinition.bind(this);\n  }\n\n  requestState() {\n    var payload: ApiPayloadPluginRequest = {\n      method: ApiPayloadPluginRequestMethod.State\n    };\n    this._metaframe.sendRpc(JsonRpcMethodsFromChild.PluginRequest, payload);\n  }\n\n  onState(listener : (_ : any) => void): () => void {\n    const disposer = this._metaframe.onInput(METAPAGE_KEY_STATE, listener);\n    if (this.getState() != null) {\n      listener(this.getState());\n    }\n    return disposer;\n  }\n\n  getState(): any {\n    return this._metaframe.getInput(METAPAGE_KEY_STATE);\n  }\n\n  setState(state : any) {\n    this._metaframe.setOutput(METAPAGE_KEY_STATE, state);\n  }\n\n  onDefinition(listener : (a : any) => void): () => void {\n    var disposer = this._metaframe.onInput(METAPAGE_KEY_DEFINITION, listener);\n    if (this.getDefinition() != null) {\n      listener(this.getDefinition());\n    }\n    return disposer;\n  }\n\n  setDefinition(definition : any) {\n    this._metaframe.setOutput(METAPAGE_KEY_DEFINITION, definition);\n  }\n\n  getDefinition(): any {\n    return this._metaframe.getInput(METAPAGE_KEY_DEFINITION);\n  }\n}\n"]}